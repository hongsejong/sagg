<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="myPageMapper">
	
	<!-- Member resultMap -->
	<resultMap type="Member" id="member_rm">
		<id property="memberNo" column="MEMBER_NO"/>
		<result property="memberPw" column="MEMBER_PW"/>
		<result property="memberNickname" column="MEMBER_NICKNAME"/>
		<result property="memberTel" column="MEMBER_TEL"/>
		<result property="memberAddr" column="MEMBER_ADDR"/>
		<result property="profileImg" column="PROFILE_IMG"/>
		<result property="memberSelfIntro" column="MEMBER_SELFINTRO"/>
		<result property="reviewRating" column="AVG_REVIEW_RATING"/>
	</resultMap>
	
	<!-- Board resultMap -->
	<resultMap type="Board" id="board_rm">
	   <id property="boardNo" column="BOARD_NO"/>
	   <result property="boardTitle" column="BOARD_TITLE"/>
	   <result property="boardContent" column="BOARD_CONTENT"/>
	   <result property="boardCode" column="BOARD_CODE"/>
	   <result property="memberNickname" column="MEMBER_NICKNAME"/>
	   <result property="profileImage" column="PROFILE_IMG"/>
	   <result property="thumbnail" column="THUMBNAIL"/>
	   <result property="requestPrice" column="REQUEST_PRICE"/>
	   <result property="categoryId" column="CATEGORY_ID"/>
	   <result property="categoryName" column="CATEGORY_NAME"/>
	   <result property="memberNo" column="MEMBER_NO"/>
	   <result property="totalBoardCount" column="TOTAL_BOARD_COUNT"/>
	   <result property="requestPrice" column="REQUEST_PRICE"/>
	   <result property="requestDueDate" column="REQUEST_DUEDATE"/>
	   <result property="reviewRating" column="REVIEW_RATING"/>
	</resultMap>
	
	<!-- Review resultMap -->
	<resultMap type="Review" id="review_rm">
		<id property="boardNo" column="BOARD_NO"/>
		<result property="reviewContent" column="REVIEW_CONTENT"/>
		<result property="reviewRating" column="REVIEW_RATING"/>
		<result property="supporterProfile" column="SUPPORTER_PROFILE"/>
		<result property="supporterNick" column="SUPPORTER_NICK"/>
		<result property="revieDate" column="REVIEW_DATE"/>
		<result property="memberNo" column="MEMBER_NO"/>
	</resultMap>
	
	<!-- RequestSupporter resultMap -->
	<resultMap type="RequestSupporter" id="supporter_rm">
		<id property="supporterNo" column="SUPPORTER_NO"/>
		<result property="supporterNickname" column="MEMBER_NICKNAME"/>
		<result property="supporterProfile" column="PROFILE_IMG"/>
		<result property="reviewRating" column="AVG_REVIEW_RATING"/>
		<result property="categoryName" column="CATEGORY_NAME"/>
		<result property="categoryId" column="CATEGORY_ID"/>
		<result property="memberNo" column="MEMBER_NO"/>
	</resultMap>
	
	<!-- 1) 회원 프로필 정보(닉네임/리뷰 별점) -->
	<select id="selectProfileInfo" resultMap="member_rm">
		SELECT 
		    M.MEMBER_NO, 
		    M.MEMBER_NICKNAME, 
		    M.MEMBER_SELFINTRO, 
		    M.PROFILE_IMG,
		    NVL(TO_CHAR(ROUND(AVG(V.REVIEW_RATING), 1), '0.0'), '0.0') AS AVG_REVIEW_RATING
		FROM "MEMBER" M
		LEFT JOIN REQUEST_SUPPORTER R ON M.MEMBER_NO = R.MEMBER_NO AND R.REQUEST_CONFIRM = 'Y'
		LEFT JOIN REVIEW V ON R.BOARD_NO = V.BOARD_NO
		WHERE M.MEMBER_NO = ${memberNo} AND M.MEMBER_DEL_FL = 'N'
		GROUP BY M.MEMBER_NO, M.MEMBER_NICKNAME, M.MEMBER_SELFINTRO, M.PROFILE_IMG
	</select>
	
	<!-- 2) 작성한 게시글 목록 조회(최신순) -->
	<select id="selectmemBoardList" resultMap="board_rm">
		SELECT B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, B.READ_COUNT, 
		       M.MEMBER_NICKNAME, M.PROFILE_IMG, M.MEMBER_NO,
		       (SELECT COUNT(*) FROM "COMMENT" C WHERE C.BOARD_NO = B.BOARD_NO) AS COMMENT_COUNT,
		       (SELECT F.FILE_PATH || F.FILE_RENAME FROM "FILE" F WHERE F.BOARD_NO = B.BOARD_NO AND F.FILE_ORDER = 0 AND REGEXP_LIKE(F.FILE_RENAME, '\.(jpg|jpeg|png|gif|bmp)$')) AS THUMBNAIL,
		       (SELECT COUNT(*) FROM BOARD WHERE MEMBER_NO = ${memberNo} AND BOARD_CODE = ${boardCode}) AS TOTAL_BOARD_COUNT 
		FROM BOARD B
		LEFT JOIN MEMBER M ON M.MEMBER_NO = B.MEMBER_NO
		WHERE B.BOARD_CODE = ${boardCode}
		  AND M.MEMBER_DEL_FL = 'N' 
		  AND M.MEMBER_BAN = 'N' 
		  AND M.MEMBER_NO = ${memberNo}
		  AND B.BOARD_DEL_FL = 'N'
		ORDER BY B.B_CREATE_DATE DESC
	</select>
	
	<!-- 3) 요청한 의뢰 게시글 목록 조회(최신순)-ajax -->
	<select id="RequestBoardListIsNotDone" resultMap="board_rm">
		SELECT B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, 
			 M.MEMBER_NICKNAME, M.PROFILE_IMG, 
			 C.CATEGORY_NAME, R.CATEGORY_ID, R.REQUEST_LOCATION, R.REQUEST_PRICE, TO_CHAR(R.REQUEST_DUEDATE, 'YYYY-MM-DD') || ' 까지' AS REQUEST_DUEDATE,
			(SELECT F.FILE_PATH || F.FILE_RENAME FROM "FILE" F WHERE F.BOARD_NO = B.BOARD_NO AND F.FILE_ORDER = 0 AND REGEXP_LIKE(F.FILE_RENAME, '\.(jpg|jpeg|png|gif|bmp)$')) AS THUMBNAIL,
			(SELECT COUNT(*) FROM BOARD B JOIN REQUEST_SUPPORTER RS ON RS.BOARD_NO = B.BOARD_NO WHERE RS.MEMBER_NO = 23 AND B.BOARD_CODE = 5 AND RS.REQUEST_CONFIRM = 'Y') AS TOTAL_BOARD_COUNT
		FROM BOARD B
		JOIN MEMBER M ON M.MEMBER_NO = B.MEMBER_NO
		JOIN REQUEST R ON R.BOARD_NO = B.BOARD_NO
		JOIN CATEGORY C ON R.CATEGORY_ID = C.CATEGORY_ID
		WHERE B.BOARD_CODE = #{boardCode}
		  AND M.MEMBER_DEL_FL = 'N' 
		  AND M.MEMBER_BAN = 'N' 
		  AND M.MEMBER_NO = #{memberNo}
		  AND B.BOARD_DEL_FL = 'N'
		  AND B.BOARD_DEL_FL = 'N'
		ORDER BY B.B_CREATE_DATE DESC
	</select>
	
	<!-- 4) 처리한 의뢰 게시글 목록 조회(최신순)-ajax -->
	<select id="RequestBoardListIsDone" resultMap="board_rm">
		SELECT B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, 
			   M.MEMBER_NICKNAME, M.PROFILE_IMG, NVL(TO_CHAR(V.REVIEW_RATING, '0.0'), '0.0') AS REVIEW_RATING,
			   C.CATEGORY_NAME, R.CATEGORY_ID, R.REQUEST_LOCATION, R.REQUEST_PRICE, TO_CHAR(R.REQUEST_DUEDATE, 'YYYY-MM-DD') || ' 까지' AS REQUEST_DUEDATE,
			(SELECT F.FILE_PATH || F.FILE_RENAME FROM "FILE" F WHERE F.BOARD_NO = B.BOARD_NO AND F.FILE_ORDER = 0 AND REGEXP_LIKE(F.FILE_RENAME, '\.(jpg|jpeg|png|gif|bmp)$')) AS THUMBNAIL,
			(SELECT COUNT(*) FROM BOARD B JOIN REQUEST_SUPPORTER RS ON RS.BOARD_NO = B.BOARD_NO WHERE RS.MEMBER_NO = 23 AND B.BOARD_CODE = 5 AND RS.REQUEST_CONFIRM = 'Y') AS TOTAL_BOARD_COUNT
		FROM REQUEST R
		JOIN BOARD B ON R.BOARD_NO = B.BOARD_NO AND B.BOARD_DEL_FL = 'N'
		JOIN REQUEST_SUPPORTER RS ON RS.BOARD_NO = R.BOARD_NO AND RS.REQUEST_CONFIRM = 'Y'
		JOIN MEMBER M ON M.MEMBER_NO = RS.MEMBER_NO AND M.MEMBER_DEL_FL = 'N' AND M.MEMBER_BAN = 'N' 
		JOIN CATEGORY C ON R.CATEGORY_ID = C.CATEGORY_ID
		JOIN REVIEW V ON V.BOARD_NO = R.BOARD_NO
		WHERE B.BOARD_CODE = #{boardCode} AND RS.MEMBER_NO = #{memberNo}  
		ORDER BY B.B_CREATE_DATE DESC
	</select>
	
	<!-- 5) 작성한 자유게시판 게시글 목록 조회(최신순)-ajax -->
	<select id="FreeBoardList" resultMap="board_rm">
		SELECT B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, B.READ_COUNT, 
		       M.MEMBER_NICKNAME, M.PROFILE_IMG, M.MEMBER_NO,
		       (SELECT COUNT(*) FROM "COMMENT" C WHERE C.BOARD_NO = B.BOARD_NO) AS COMMENT_COUNT,
		       (SELECT F.FILE_PATH || F.FILE_RENAME FROM "FILE" F WHERE F.BOARD_NO = B.BOARD_NO AND F.FILE_ORDER = 0 AND REGEXP_LIKE(F.FILE_RENAME, '\.(jpg|jpeg|png|gif|bmp)$')) AS THUMBNAIL,
		       (SELECT COUNT(*) FROM BOARD WHERE MEMBER_NO = 14 AND BOARD_CODE = 3) AS TOTAL_BOARD_COUNT  
		FROM BOARD B
		JOIN MEMBER M ON M.MEMBER_NO = B.MEMBER_NO AND M.MEMBER_DEL_FL = 'N' AND M.MEMBER_BAN = 'N' 
		WHERE B.BOARD_CODE = #{boardCode}
		  AND M.MEMBER_NO = #{memberNo}
		  AND B.BOARD_DEL_FL = 'N'
		ORDER BY B.B_CREATE_DATE DESC
	</select>
	
	<!-- 6) 좋아요 누른 게시글 목록 조회(최신순)-ajax -->
	<select id="FreeBoardListLike" resultMap="board_rm">
		SELECT L.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, B.READ_COUNT, 
		       M.MEMBER_NICKNAME, M.PROFILE_IMG,
		       (SELECT COUNT(*) FROM "COMMENT" C WHERE C.BOARD_NO = B.BOARD_NO) AS COMMENT_COUNT,
		       (SELECT F.FILE_PATH || F.FILE_RENAME FROM "FILE" F WHERE F.BOARD_NO = B.BOARD_NO AND F.FILE_ORDER = 0 AND REGEXP_LIKE(F.FILE_RENAME, '\.(jpg|jpeg|png|gif|bmp)$')) AS THUMBNAIL,
		       (SELECT COUNT(*) FROM BOARD WHERE MEMBER_NO = 14 AND BOARD_CODE = 3) AS TOTAL_BOARD_COUNT  
		FROM BOARD_LIKE L
		JOIN MEMBER M ON M.MEMBER_NO = L.MEMBER_NO AND M.MEMBER_DEL_FL = 'N' AND M.MEMBER_BAN = 'N' 
		JOIN BOARD B ON B.BOARD_NO = L.BOARD_NO AND B.BOARD_DEL_FL = 'N'
		WHERE B.BOARD_CODE = #{boardCode}
		  AND L.MEMBER_NO = #{memberNo}
		ORDER BY B.B_CREATE_DATE DESC
	</select>
	
	<!-- 7) 자기소개 내용 수정(ajax) -->
	<update id="updateSelfIntro">
		UPDATE MEMBER SET MEMBER_SELFINTRO = #{memberSelfIntro} WHERE MEMBER_NO = ${memberNo}
	</update>
	
	<!-- 8) 자기소개 내용 수정 후 화면 전환(ajax) -->
	<select id="viewSelfIntro" resultType="string">
		SELECT MEMBER_SELFINTRO FROM MEMBER WHERE MEMBER_NO = ${memberNo}
	</select>
	
	<!-- 9) 회원 프로필 이미지 변경 -->
	<update id="updateProfileImg">
		UPDATE MEMBER SET PROFILE_IMG = #{profileImg}
		WHERE MEMBER_NO = ${memberNo}
	</update>
	
	<!-- 10) 회원정보 수정 -->
	<update id="updateInfo">
		UPDATE MEMBER SET MEMBER_NICKNAME = #{memberNickname}, MEMBER_TEL = #{memberTel}, MEMBER_ADDR = #{memberAddress}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 11) 비밀번호 변경 -->
	<update id="changePw">
		UPDATE MEMBER SET 
		MEMBER_PW = #{memberPw} WHERE MEMBER_NO = ${memberNo}
	</update>
	
	<!-- 회원 비밀번호 조회 -->
	<select id="selectEncPw" parameterType="_int" resultType="string">
		SELECT MEMBER_PW FROM MEMBER
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 회원 탈퇴 -->
	<update id="secession" parameterType="map">
	   UPDATE MEMBER
	   SET MEMBER_DEL_FL = 'Y',
	       MEMBER_DER_REASON = #{withdrawReason}
	   WHERE MEMBER_NO = #{memberNo}
	 </update>
	  
</mapper>
